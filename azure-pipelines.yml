jobs:
- job: Default
  timeoutInMinutes: 60
  pool:
    vmImage: Ubuntu-16.04
  steps:

  - script: |
      nproc
      lscpu
    displayName: 'Machine info'

  - script: |
      sudo chown -R $USER $CONDA
      . $CONDA/etc/profile.d/conda.sh
      conda create --yes --quiet --name starry python=3.7.3 pip
    displayName: 'Setup conda'

  - script: |
      . $CONDA/etc/profile.d/conda.sh
      conda activate starry

      # Base requirements
      conda install -y -q numpy scipy mkl openblas theano
      theano-cache purge
      pip install -U pip
      pip install -U setuptools
      pip install -U parameterized nose pytest pytest-cov
      pip install -U -r requirements.txt
      pip install -U -r optional-requirements.txt

      # Needed for building the docs
      conda install -y -q -c conda-forge pandoc
      pip install -U sphinx
      pip install -U "nbconvert>=5.5"
      git clone https://github.com/rodluger/nbsphinx
      pushd nbsphinx
      python setup.py develop
      popd
      pip install -U coverage-badge

      # Needed for running the notebooks
      pip install -U ipywidgets
      sudo apt-get install ffmpeg
      pip install -U sympy
      pip install -U corner
    displayName: 'Install dependencies'

  - script: |
      . $CONDA/etc/profile.d/conda.sh
      conda activate starry
      python setup.py develop
    displayName: 'Install starry'

  - bash: .ci/run_tests.sh
    displayName: 'Run tests'
    failOnStderr: true
    condition: not(contains(variables['Build.SourceVersionMessage'], '[skip tests]'))

  - script: |
      . $CONDA/etc/profile.d/conda.sh
      conda activate starry
      set -e

      # Build the docs
      make -C docs html
      cd docs/_build

      # Clone the `gh-pages` branch
      mkdir gh-pages
      cd gh-pages
      git clone -b gh-pages --single-branch https://github.com/rodluger/starry.git .

      # Reset git tracking & update the current version's docs
      rm -rf .git
      STARRY_VERSION=$(python -c "import starry; print('v' + starry.__version__)")
      rm -rf $STARRY_VERSION/*
      mkdir -p $STARRY_VERSION
      mv ../html/* $STARRY_VERSION/

      # Copy over the coverage results, if available
      mv ../../../htmlcov $STARRY_VERSION/

      # Update the version list, if necessary
      python update_version_list.py $STARRY_VERSION

      # Commit & force push back
      git init
      touch .nojekyll
      git add -f .nojekyll
      git add -f *
      git -c user.name='rodluger' -c user.email='rodluger@gmail.com' \
          commit -m "rebuild gh-pages for ${STARRY_VERSION}"
      git push -f https://$(GITHUB_USER):$(GITHUB_API_KEY)@github.com/rodluger/starry \
          HEAD:gh-pages >/dev/null 2>&1 -q
      cd ../../
    displayName: 'Build docs'
    condition: and(ne(variables['Build.Reason'], 'PullRequest'), not(contains(variables['Build.SourceVersionMessage'], '[skip docs]')))

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results'
