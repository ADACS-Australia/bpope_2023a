jobs:
- job: Default
  timeoutInMinutes: 60
  pool:
    vmImage: Ubuntu-16.04
  steps:

  - script: |
      nproc
      lscpu
    displayName: 'Machine info'

  - script: |
      sudo chown -R $USER $CONDA
      . $CONDA/etc/profile.d/conda.sh
      conda create --yes --quiet --name starry python=3.7.3 pip
    displayName: 'Setup conda'

  - script: |
      . $CONDA/etc/profile.d/conda.sh
      conda activate starry

      # Base requirements
      conda install -y -q numpy scipy mkl openblas theano
      theano-cache purge
      pip install -U pip
      pip install -U setuptools
      pip install -U parameterized nose pytest pytest-cov
      pip install -U -r requirements.txt
      pip install -U -r optional-requirements.txt

      # Needed for building the docs
      conda install -y -q -c conda-forge pandoc
      pip install -U sphinx
      pip install -U "nbconvert>=5.5"
      git clone https://github.com/rodluger/nbsphinx
      pushd nbsphinx
      python setup.py develop
      popd
      pip install -U coverage-badge

      # Needed for running the notebooks
      pip install -U ipywidgets
      sudo apt-get install ffmpeg
      pip install -U sympy
      pip install -U corner
    displayName: 'Install dependencies'

  - script: |
      . $CONDA/etc/profile.d/conda.sh
      conda activate starry
      python setup.py develop
    displayName: 'Install starry'

  - bash: .ci/run_tests.sh
    displayName: 'Run tests'
    failOnStderr: false
    condition: not(contains(variables['Build.SourceVersionMessage'], '[skip tests]'))

  - bash: .ci/run_notebooks.sh
    displayName: 'Run notebooks'
    failOnStderr: false
    env:
      GHUSER: $(GITHUB_USER)
      GHKEY: $(GITHUB_API_KEY)
    condition: contains(variables['Build.SourceVersionMessage'], '[run notebooks]')

  - bash: .ci/get_notebooks.sh
    displayName: 'Get notebooks'
    failOnStderr: false
    condition: not(contains(variables['Build.SourceVersionMessage'], '[run notebooks]'))

  - bash: .ci/build_docs.sh
    displayName: 'Build docs'
    failOnStderr: false
    env:
      GHUSER: $(GITHUB_USER)
      GHKEY: $(GITHUB_API_KEY)
    condition: and(ne(variables['Build.Reason'], 'PullRequest'), not(contains(variables['Build.SourceVersionMessage'], '[skip docs]')))

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results'
