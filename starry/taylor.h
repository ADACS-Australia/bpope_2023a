/**
Taylor expansions for the solver module.

*/

#ifndef _STARRY_TAYLOR_H_
#define _STARRY_TAYLOR_H_

#include <iostream>
#include <cmath>
#include "errors.h"
#include "fact.h"
#include "ellip.h"

namespace solver
{
    template <class T>
    class Greens;
    bool is_even(int n, int ntimes);
    template <typename T>
    inline T step(T x);
};

namespace taylor {

    // Taylor expand the difference between the elliptic integrals
    // for the s2 term when r >= 1; much more numerically stable!
    template <typename T>
    inline T s2(solver::Greens<T>& G) {
        T x = 1. / G.b_r(1);
        T eps = x - 1;
        T EP = ellip::PI(1 - 1. / ((G.b() - G.r()) * (G.b() - G.r())), G.ksq());
        T EminusK = -G.pi * (0.25 * G.ksq() + 0.09375 * G.ksq(2) + 0.05859375 * G.ksq(3) + 0.042724609375 * G.ksq(4) +
                     0.0336456298828125 * G.ksq(5) + 0.027757644653320312 * G.ksq(6) + 0.023627042770385742 * G.ksq(7) +
                     0.020568184554576874 * G.ksq(8) + 0.018211413407698274 * G.ksq(9) + 0.016339684807462618 * G.ksq(10) +
                     0.01481712326858542 * G.ksq(11) + 0.013554300262740071 * G.ksq(12));
        T taylor = 2 * G.b(3) * sqrt(x) * (EminusK * (16 + 28 * eps + 14 * eps * eps) - eps * eps * (2 + 3 * eps) * G.ELL.K());
        T badterm = taylor + sqrt(G.br) * ((8 - 3 / G.br + 12 / G.b_r(1)) * G.ELL.K() - 16 * G.ELL.E());
        T goodterm = (3 * (G.b() + G.r()) / (G.b() - G.r()) * EP) / sqrt(G.br);
        T Lambda = (badterm + goodterm) / (9 * G.pi);
        return (2. * G.pi / 3.) * (1 - 1.5 * Lambda - solver::step(G.r() - G.b()));
    }

    // Taylor expansion about b = 0
    template <typename T>
    inline T computeJ(solver::Greens<T>& G, int u, int v) {
        T r1 = 1 - G.r(2);
        T r12 = sqrt(r1);
        T r32 = r1 * r12;
        T r52 = r1 * r32;
        T r72 = r1 * r52;
        return (r32 * G.I(u, v)) +
               (-3 * G.r() * r12 * G.I(u, v + 1)) * G.b() +
               (-1.5 * r12 * G.I(u, v) + 1.5 * G.r(2) / r12 * G.I(u, v + 2)) * G.b(2) +
               (1.5 * G.r() / r12 * G.I(u, v + 1) + 0.5 * G.r(3) / r32 * G.I(u, v + 3)) * G.b(3) +
               (0.375 / r12 * G.I(u, v) + 0.75 * G.r(2) / r32 * G.I(u, v + 2) + 0.375 * G.r(4) / r52 * G.I(u, v + 4)) * G.b(4)  +
               (0.375 * G.r() / r32 * G.I(u, v + 1) + 0.75 * G.r(3) / r52 * G.I(u, v + 3) + 0.375 * G.r(5) / r72 * G.I(u, v + 5)) * G.b(5) ;
    }

    // Approximate occultor limb as a quartic function
    template <typename T>
    inline T P(solver::Greens<T>& G) {
        if (!solver::is_even(G.mu / 2, 1))
            return 0;

        // This is our old quadratic approximation; quartic is better
        /*
        T amp = 4 * pow(G.b() - G.r(), G.nu / 2) / G.r();
        T res = 0;
        for (int i=0; i<=G.nu/2; i++)
            res += fact::choose(G.nu / 2, i) * G.coslam(3 + 2 * i + G.mu / 2) / (G.r(i) * (6 + 4 * i + G.mu) * pow(2 * (G.b() - G.r()), i));
        return amp * res;
        */

        // Quartic
        T res = 0;
        T amp = pow(G.b() - G.r(), G.nu / 2) / G.r();
        T jamp, jsum;
        T frac = (G.mu + 2.) / 4.;
        int twofrac = 1 + G.mu / 2;
        for (int i = 0; i <= G.nu / 2; i++) {
            jamp = fact::choose(G.nu / 2, i) * pow(2 * G.r() * (G.b() - G.r()), -i);
            jsum = 0;
            for (int j = 0; j <= i; j++) {
                jsum += fact::choose(i, j)
                      * pow(4, -j) / G.r(2 * j)
                      * G.coslam(twofrac + 2 * (i + j + 1))
                      * (1. / (frac + i + j + 1) + 0.5 * G.coslam(2) / (G.r(2) * (frac + i + j + 2)));
            }
            res += jamp * jsum;
        }
        return amp * res;

    }

    // Taylor expand M() at large k^2
    template <typename T>
    inline T computeM(solver::Greens<T>& G, int p, int q) {
        T ksq = G.ksq();
        if (p == 0){
            if (q == 0) return 1.190525780653613e-13*G.ksq(2)*(1.9791209299968e13 + ksq*(1.649267441664e12 + ksq*(4.63856467968e11 + ksq*(1.9327352832e11 + ksq*(9.865003008e10 + ksq*(5.7076088832e10 + ksq*(3.5969826816e10 + 169.*ksq*(1.42737408e8 + ksq*(1.0036224e8 + 289.*ksq*(253440. + 361.*ksq*(528. + 49.*ksq*(-1009. + 1587.*ksq))))))))))));
            else if (q == 2) return 1.190525780653613e-13*G.ksq(2)*(1.9791209299968e13 + ksq*(-1.649267441664e12 + ksq*(-1.54618822656e11 + ksq*(-3.8654705664e10 + ksq*(-1.409286144e10 + ksq*(-6.341787648e9 + ksq*(-3.269984256e9 + 13.*ksq*(-1.42737408e8 + 13.*ksq*(-6.690816e6 + 17.*ksq*(-253440. + 323.*ksq*(-528. + 133.*ksq*(-1427. + 4347.*ksq))))))))))));
            else if (q == 4) return 3.571577341960839e-13*G.ksq(2)*(6.597069766656e12 + ksq*(-1.649267441664e12 + ksq*(1.54618822656e11 + ksq*(1.2884901888e10 + ksq*(2.818572288e9 + ksq*(9.05969664e8 + ksq*(3.63331584e8 + 13.*ksq*(1.2976128e7 + ksq*(6.690816e6 + 221.*ksq*(16896. + 19.*ksq*(528. + 17.*ksq*(-27041. + 437.*ksq*(282. + 35.*ksq)))))))))))));
            else if (q == 6) return -3.9684192688453765e-14*G.ksq(2)*(-5.9373627899904e13 + ksq*(2.473901162496e13 + ksq*(-6.95784701952e12 + ksq*(5.7982058496e11 + ksq*(4.227858432e10 + ksq*(8.153726976e9 + ksq*(2.33570304e9 + 13.*ksq*(6.488064e7 + ksq*(2.737152e7 + 17.*ksq*(760320. + 247.*ksq*(1584. + 5.*ksq*(460201. + 391.*ksq*(-7122. + 19.*ksq*(-123. + 28.*ksq))))))))))))));
            else if (q == 8) return 3.607653880768524e-15*G.ksq(2)*(6.53109906898944e14 + ksq*(-3.80980779024384e14 + ksq*(1.7858474016768e14 + ksq*(-4.464618504192e13 + ksq*(3.25545099264e12 + ksq*(2.09278992384e11 + ksq*(3.5969826816e10 + 13.*ksq*(7.1368704e8 + ksq*(2.3417856e8 + 17.*ksq*(5.32224e6 + 19.*ksq*(121968. + 13.*ksq*(-1.6096451e7 + 115.*ksq*(1.057581e6 + 17.*ksq*(36897. + 19.*ksq*(-871. + 168.*ksq)))))))))))))));
            else if (q == 10) return -1.0822961642305572e-14*G.ksq(2)*(-2.17703302299648e14 + ksq*(1.63277476724736e14 + ksq*(-1.07150844100608e14 + ksq*(4.464618504192e13 + ksq*(-9.76635297792e12 + ksq*(6.27836977152e11 + ksq*(3.5969826816e10 + ksq*(5.566758912e9 + ksq*(1.30470912e9 + 17.*ksq*(2.306304e7 + 19.*ksq*(432432. + ksq*(6.28110861e8 + 299.*ksq*(-1.9013337e7 + 5.*ksq*(-3.449299e6 + 17.*ksq*(135081. + 76.*ksq*(-681. + 112.*ksq))))))))))))))));
            else if (q == 12) return 3.607653880768524e-15*G.ksq(2)*(6.53109906898944e14 + ksq*(-5.98684081324032e14 + ksq*(5.05139693617152e14 + ksq*(-2.94664821276672e14 + ksq*(1.0742988275712e14 + ksq*(-2.0718620246016e13 + ksq*(1.187004284928e12 + ksq*(6.1234348032e10 + ksq*(8.611080192e9 + 17.*ksq*(1.0872576e8 + 19.*ksq*(1.585584e6 + ksq*(-1.380935787e9 + 23.*ksq*(6.33892644e8 + 65.*ksq*(1.230789e7 + ksq*(-1.0834268e7 + 17.*ksq*(364611. + 304.*ksq*(-393. + 56.*ksq)))))))))))))))));
        } else if (p == 2){
            if (q == 0) return 2.381051561307226e-13*G.ksq(3)*(1.649267441664e12 + ksq*(3.09237645312e11 + ksq*(1.15964116992e11 + ksq*(5.637144576e10 + ksq*(3.170893824e10 + ksq*(1.9619905536e10 + 13.*ksq*(9.99161856e8 + 13.*ksq*(5.3526528e7 + 17.*ksq*(2.28096e6 + 323.*ksq*(5280. + 133.*ksq*(-2818. + 3381.*ksq)))))))))));
            else if (q == 2) return -1.190525780653613e-13*G.ksq(3)*(-3.298534883328e12 + ksq*(6.18475290624e11 + ksq*(7.7309411328e10 + ksq*(2.2548578304e10 + ksq*(9.05969664e9 + ksq*(4.359979008e9 + 13.*ksq*(1.81665792e8 + ksq*(1.07053056e8 + 221.*ksq*(304128. + 19.*ksq*(10560. + 17.*ksq*(108668. + 1311.*ksq*(-159. + 35.*ksq))))))))))));
            else if (q == 4) return 1.5873677075381506e-13*G.ksq(3)*(2.473901162496e12 + ksq*(-1.391569403904e12 + ksq*(1.73946175488e11 + ksq*(1.6911433728e10 + ksq*(4.076863488e9 + ksq*(1.401421824e9 + 13.*ksq*(4.5416448e7 + ksq*(2.1897216e7 + 17.*ksq*(684288. + 247.*ksq*(1584. + ksq*(-459067. + 391.*ksq*(3153. + 95.*ksq*(-15. + 7.*ksq)))))))))))));
            else if (q == 6) return -3.607653880768524e-15*G.ksq(3)*(-1.08851651149824e14 + ksq*(1.0204842295296e14 + ksq*(-3.826815860736e13 + ksq*(3.72051542016e12 + ksq*(2.9896998912e11 + ksq*(6.1662560256e10 + 13.*ksq*(1.42737408e9 + ksq*(5.3526528e8 + 17.*ksq*(1.368576e7 + 19.*ksq*(348480. + 13.*ksq*(9.214604e6 + 115.*ksq*(-274233. + 17.*ksq*(11190. + 19.*ksq*(-563. + 168.*ksq))))))))))))));
            else if (q == 8) return 7.215307761537049e-15*G.ksq(3)*(5.4425825574912e13 + ksq*(-7.1433896067072e13 + ksq*(4.464618504192e13 + ksq*(-1.302180397056e13 + ksq*(1.04639496192e12 + ksq*(7.1939653632e10 + ksq*(1.2989104128e10 + ksq*(3.47922432e9 + 17.*ksq*(6.918912e7 + 19.*ksq*(1.44144e6 + ksq*(-4.17983818e8 + 299.*ksq*(5.851377e6 + 5.*ksq*(-1.09683e6 + 17.*ksq*(95053. + 114.*ksq*(-499. + 112.*ksq)))))))))))))));
            else if (q == 10) return -3.607653880768524e-15*G.ksq(3)*(-1.08851651149824e14 + ksq*(1.83687161315328e14 + ksq*(-1.60726266150912e14 + ksq*(7.813082382336e13 + ksq*(-1.883510931456e13 + ksq*(1.294913765376e12 + ksq*(7.7934624768e10 + ksq*(1.2525207552e10 + 17.*ksq*(1.7791488e8 + 19.*ksq*(2.88288e6 + ksq*(5.03396796e8 + 23.*ksq*(-1.07627499e8 + 65.*ksq*(1.959993e6 + ksq*(-3.945137e6 + 17.*ksq*(209343. + 304.*ksq*(-309. + 56.*ksq))))))))))))))));
            else if (q == 12) return 1.4430615523074097e-14*G.ksq(3)*(2.7212912787456e13 + ksq*(-5.6126632624128e13 + ksq*(6.3142461702144e13 + ksq*(-4.2971953102848e13 + ksq*(1.726551687168e13 + ksq*(-3.561012854784e12 + ksq*(2.14320218112e11 + ksq*(1.1481440256e10 + ksq*(1.663504128e9 + 19.*ksq*(1.925352e7 + ksq*(-1.376016873e9 + 23.*ksq*(3.41154198e8 + 5.*ksq*(-9.7570242e7 + 13.*ksq*(1.931608e7 + ksq*(-2.3344479e7 + 34.*ksq*(462585. + 304.*ksq*(-551. + 84.*ksq)))))))))))))))));
        } else if (p == 4){
            if (q == 0) return 3.571577341960839e-13*G.ksq(4)*(4.12316860416e11 + ksq*(1.03079215104e11 + ksq*(4.5097156608e10 + ksq*(2.415919104e10 + ksq*(1.453326336e10 + 13.*ksq*(7.26663168e8 + ksq*(4.99580928e8 + 221.*ksq*(1.622016e6 + 19.*ksq*(63360. + 17.*ksq*(-213640. + 437.*ksq*(527. + 35.*ksq)))))))))));
            else if (q == 2) return -3.9684192688453765e-14*G.ksq(4)*(-3.710851743744e12 + ksq*(9.27712935936e11 + ksq*(1.35291469824e11 + ksq*(4.3486543872e10 + ksq*(1.868562432e10 + 13.*ksq*(7.26663168e8 + ksq*(4.08748032e8 + 17.*ksq*(1.4598144e7 + 247.*ksq*(38016. + ksq*(3.7058e6 + 391.*ksq*(-14577. + 95.*ksq*(3. + 28.*ksq))))))))))));
            else if (q == 4) return 1.0822961642305572e-14*G.ksq(4)*(1.3606456393728e13 + ksq*(-1.0204842295296e13 + ksq*(1.488206168064e12 + ksq*(1.59450660864e11 + ksq*(4.1108373504e10 + 13.*ksq*(1.141899264e9 + ksq*(4.99580928e8 + 17.*ksq*(1.4598144e7 + 19.*ksq*(418176. + 13.*ksq*(-3.661448e6 + 23.*ksq*(329093. + 85.*ksq*(-450. + 19.*ksq*(-85. + 56.*ksq)))))))))))));
            else if (q == 6) return -1.0822961642305572e-14*G.ksq(4)*(-1.3606456393728e13 + ksq*(1.700807049216e13 + ksq*(-7.44103084032e12 + ksq*(7.9725330432e11 + ksq*(6.851395584e10 + ksq*(1.4844690432e10 + ksq*(4.63896576e9 + 17.*ksq*(1.0543104e8 + 19.*ksq*(2.47104e6 + ksq*(2.4043348e8 + 299.*ksq*(-2.040797e6 + 5.*ksq*(93110. + 17.*ksq*(17015. + 76.*ksq*(-317. + 112.*ksq))))))))))))));
            else if (q == 8) return 3.607653880768524e-15*G.ksq(4)*(4.0819369181184e13 + ksq*(-7.1433896067072e13 + ksq*(5.208721588224e13 + ksq*(-1.674231939072e13 + ksq*(1.43879307264e12 + ksq*(1.03912833024e11 + ksq*(1.9483656192e10 + 17.*ksq*(3.1629312e8 + 19.*ksq*(5.76576e6 + ksq*(-3.3257084e8 + 23.*ksq*(4.4508303e7 + 65.*ksq*(-233667. + ksq*(-713335. + 17.*ksq*(95571. + 304.*ksq*(-225. + 56.*ksq)))))))))))))));
            else if (q == 10) return -1.0822961642305572e-14*G.ksq(4)*(-1.3606456393728e13 + ksq*(3.0614526885888e13 + ksq*(-3.1252329529344e13 + ksq*(1.674231939072e13 + ksq*(-4.31637921792e12 + ksq*(3.11738499072e11 + ksq*(1.9483656192e10 + ksq*(3.226189824e9 + 19.*ksq*(4.200768e7 + ksq*(1.01789268e9 + 23.*ksq*(-1.55016897e8 + 5.*ksq*(1.4292495e7 + 13.*ksq*(3.398997e6 + ksq*(-1.0959263e7 + 136.*ksq*(87657. + 1216.*ksq*(-36. + 7.*ksq))))))))))))))));
            else if (q == 12) return 1.0822961642305572e-14*G.ksq(4)*(1.3606456393728e13 + ksq*(-3.7417755082752e13 + ksq*(4.9110803546112e13 + ksq*(-3.6833102659584e13 + ksq*(1.582672379904e13 + ksq*(-3.429123489792e12 + ksq*(2.14320218112e11 + ksq*(1.1829362688e10 + ksq*(1.755921024e9 + ksq*(-1.065772092e10 + 23.*ksq*(1.952696823e9 + 5.*ksq*(-2.2533126e8 + ksq*(-7.19120094e8 + 13.*ksq*(2.3520518e8 + ksq*(-3.45064681e8 + 544.*ksq*(477087. + 532.*ksq*(-349. + 56.*ksq)))))))))))))))));
        } else if (p == 6){
            if (q == 0) return 7.936838537690753e-14*G.ksq(5)*(9.27712935936e11 + ksq*(2.70582939648e11 + ksq*(1.30459631616e11 + ksq*(7.474249728e10 + 13.*ksq*(3.63331584e9 + ksq*(2.452488192e9 + 17.*ksq*(1.02187008e8 + 247.*ksq*(304128. + 5.*ksq*(-2.898112e6 + 391.*ksq*(7554. + 19.*ksq*(33. + 14.*ksq)))))))))));
            else if (q == 2) return -3.607653880768524e-15*G.ksq(5)*(-2.0409684590592e13 + ksq*(5.952824672256e12 + ksq*(9.56703965184e11 + ksq*(3.28866988032e11 + 13.*ksq*(1.141899264e10 + ksq*(5.994971136e9 + 17.*ksq*(2.04374016e8 + 19.*ksq*(6.690816e6 + 13.*ksq*(2.9779456e7 + 115.*ksq*(-347724. + 17.*ksq*(-723. + 19.*ksq*(53. + 168.*ksq))))))))))));
            else if (q == 4) return 4.329184656922229e-14*G.ksq(5)*(1.700807049216e12 + ksq*(-1.488206168064e12 + ksq*(2.39175991296e11 + ksq*(2.7405582336e10 + ksq*(7.422345216e9 + ksq*(2.783379456e9 + 17.*ksq*(7.3801728e7 + 19.*ksq*(1.976832e6 + ksq*(-9.4587808e7 + 299.*ksq*(559353. + 5.*ksq*(-1585. + 17.*ksq*(-995. + 19.*ksq*(-135. + 112.*ksq)))))))))))));
            else if (q == 6) return -3.607653880768524e-15*G.ksq(5)*(-2.0409684590592e13 + ksq*(2.976412336128e13 + ksq*(-1.435055947776e13 + ksq*(1.64433494016e12 + ksq*(1.4844690432e11 + ksq*(3.3400553472e10 + 85.*ksq*(1.26517248e8 + 19.*ksq*(2.635776e6 + ksq*(7.774592e7 + 23.*ksq*(-7.016556e6 + 13.*ksq*(45663. + ksq*(154430. + 17.*ksq*(23295. + 304.*ksq*(-141. + 56.*ksq))))))))))))));
            else if (q == 8) return 7.215307761537049e-15*G.ksq(5)*(1.0204842295296e13 + ksq*(-2.0834886352896e13 + ksq*(1.674231939072e13 + ksq*(-5.75517229056e12 + ksq*(5.1956416512e11 + ksq*(3.8967312384e10 + ksq*(7.527776256e9 + 95.*ksq*(2.2404096e7 + ksq*(-2.60002624e8 + 23.*ksq*(2.9159046e7 + ksq*(-4.381461e6 + 13.*ksq*(-964852. + ksq*(-2.628885e6 + 68.*ksq*(117621. + 304.*ksq*(-313. + 84.*ksq)))))))))))))));
            else if (q == 10) return -1.0822961642305572e-14*G.ksq(5)*(-6.803228196864e12 + ksq*(1.7858474016768e13 + ksq*(-2.0090783268864e13 + ksq*(1.151034458112e13 + ksq*(-3.11738499072e12 + ksq*(2.33803874304e11 + ksq*(1.5055552512e10 + ksq*(2.554066944e9 + 5.*ksq*(1.736448e9 + 23.*ksq*(-1.98524844e8 + ksq*(4.6226145e7 + ksq*(1.20432165e8 + 13.*ksq*(2.6979183e7 + ksq*(-1.18558993e8 + 544.*ksq*(269151. + 3724.*ksq*(-39. + 8.*ksq))))))))))))))));
            else if (q == 12) return 1.4430615523074097e-14*G.ksq(5)*(5.102421147648e12 + ksq*(-1.6370267848704e13 + ksq*(2.3678423138304e13 + ksq*(-1.8992068558848e13 + ksq*(8.57280872448e12 + ksq*(-1.928881963008e12 + ksq*(1.24208308224e11 + ksq*(7.023684096e9 + ksq*(-2.093939232e9 + 115.*ksq*(9.1102473e7 + ksq*(-2.6413002e7 + ksq*(-6.939009e7 + ksq*(-2.18888208e8 + 13.*ksq*(9.9176637e7 + 2.*ksq*(-8.2858427e7 + 272.*ksq*(247989. + 76.*ksq*(-1341. + 224.*ksq)))))))))))))))));
        } else if (p == 8){
            if (q == 0) return 3.607653880768524e-15*G.ksq(6)*(1.1905649344512e13 + ksq*(3.826815860736e12 + ksq*(1.973201928192e12 + 13.*ksq*(9.135194112e10 + ksq*(5.994971136e10 + 17.*ksq*(2.452488192e9 + 19.*ksq*(9.3671424e7 + 13.*ksq*(-2.89012864e8 + 115.*ksq*(2.477472e6 + 17.*ksq*(13071. + 19.*ksq*(361. + 168.*ksq)))))))))));
            else if (q == 2) return -3.607653880768524e-15*G.ksq(6)*(-1.1905649344512e13 + ksq*(3.826815860736e12 + ksq*(6.57733976064e11 + ksq*(2.37515046912e11 + ksq*(1.1133517824e11 + 17.*ksq*(3.542482944e9 + 19.*ksq*(1.10702592e8 + ksq*(3.897674368e9 + 299.*ksq*(-1.5889824e7 + 5.*ksq*(-178803. + 17.*ksq*(1151. + 228.*ksq*(47. + 112.*ksq))))))))))));
            else if (q == 4) return 3.607653880768524e-15*G.ksq(6)*(1.1905649344512e13 + ksq*(-1.1480447582208e13 + ksq*(1.973201928192e12 + ksq*(2.37515046912e11 + ksq*(6.6801106944e10 + 17.*ksq*(1.518206976e9 + 19.*ksq*(3.6900864e7 + ksq*(-7.46324096e8 + 23.*ksq*(5.2176288e7 + 65.*ksq*(26643. + ksq*(-48550. + 17.*ksq*(-7485. + 304.*ksq*(-57. + 56.*ksq)))))))))))));
            else if (q == 6) return -3.607653880768524e-15*G.ksq(6)*(-1.1905649344512e13 + ksq*(1.913407930368e13 + ksq*(-9.86600964096e12 + ksq*(1.18757523456e12 + ksq*(1.1133517824e11 + ksq*(2.5809518592e10 + 95.*ksq*(8.9616384e7 + ksq*(8.01675392e8 + 23.*ksq*(-6.096336e7 + ksq*(1.328601e6 + 13.*ksq*(695606. + ksq*(1.474485e6 + 136.*ksq*(26535. + 608.*ksq*(-97. + 42.*ksq))))))))))))));
            else if (q == 8) return 2.5253577165379668e-14*G.ksq(6)*(1.700807049216e12 + ksq*(-3.826815860736e12 + ksq*(3.28866988032e12 + ksq*(-1.18757523456e12 + ksq*(1.1133517824e11 + ksq*(8.603172864e9 + ksq*(1.702711296e9 + 5.*ksq*(-6.67250816e8 + 23.*ksq*(7.3209888e7 + ksq*(-3.973869e6 + ksq*(-1.6477199e7 + 13.*ksq*(-2.708583e6 + ksq*(-7.392045e6 + 544.*ksq*(50783. + 228.*ksq*(-197. + 56.*ksq)))))))))))))));
            else if (q == 10) return -3.607653880768524e-15*G.ksq(6)*(-1.1905649344512e13 + ksq*(3.4441342746624e13 + ksq*(-4.1437240492032e13 + ksq*(2.493907992576e13 + ksq*(-7.01411622912e12 + ksq*(5.41999890432e11 + ksq*(3.5756937216e10 + ksq*(1.7670963072e10 + 115.*ksq*(-2.3116464e8 + ksq*(3.3026427e7 + ksq*(8.3736135e7 + ksq*(1.76635305e8 + 13.*ksq*(4.1029569e7 + 8.*ksq*(-2.7951623e7 + 544.*ksq*(69531. + 38.*ksq*(-1047. + 224.*ksq))))))))))))))));
            else if (q == 12) return 3.607653880768524e-15*G.ksq(6)*(1.1905649344512e13 + ksq*(-4.2094974468096e13 + ksq*(6.5115663630336e13 + ksq*(-5.4865975836672e13 + ksq*(2.571842617344e13 + ksq*(-5.961998794752e12 + ksq*(3.93326309376e11 + ksq*(1.7200385664e10 + ksq*(1.8616241952e10 + 5.*ksq*(-3.55232493e8 + ksq*(-1.297370844e9 + ksq*(-2.96481339e9 + ksq*(-1.0053109836e10 + 13.*ksq*(5.688013919e9 + 16.*ksq*(-6.51775173e8 + 136.*ksq*(4.140897e6 + 608.*ksq*(-2921. + 504.*ksq)))))))))))))))));
        } else if (p == 10){
            if (q == 0) return 2.1645923284611144e-14*G.ksq(7)*(1.275605286912e12 + ksq*(4.38489317376e11 + ksq*(2.37515046912e11 + ksq*(1.4844690432e11 + 17.*ksq*(5.90413824e9 + 19.*ksq*(2.21405184e8 + ksq*(-7.490916608e9 + 299.*ksq*(2.4190976e7 + 5.*ksq*(451648. + 17.*ksq*(15053. + 38.*ksq*(229. + 112.*ksq)))))))))));
            else if (q == 2) return -3.607653880768524e-15*G.ksq(7)*(-7.653631721472e12 + ksq*(2.630935904256e12 + ksq*(4.75030093824e11 + ksq*(1.78136285184e11 + 17.*ksq*(5.06068992e9 + 19.*ksq*(1.47603456e8 + ksq*(3.151350272e9 + 23.*ksq*(-1.54391424e8 + 65.*ksq*(-152160. + ksq*(-28983. + 17.*ksq*(3231. + 304.*ksq*(27. + 56.*ksq))))))))))));
            else if (q == 4) return 8.658369313844458e-14*G.ksq(7)*(3.18901321728e11 + ksq*(-3.28866988032e11 + ksq*(5.9378761728e10 + ksq*(7.422345216e9 + ksq*(2.150793216e9 + 19.*ksq*(4.4808192e7 + ksq*(-3.61630528e8 + 23.*ksq*(2.4257504e7 + 5.*ksq*(300696. + 13.*ksq*(-5406. + ksq*(-28695. + 17.*ksq*(-3429. + 304.*ksq*(-25. + 28.*ksq)))))))))))));
            else if (q == 6) return -1.0822961642305572e-14*G.ksq(7)*(-2.551210573824e12 + ksq*(4.38489317376e12 + ksq*(-2.37515046912e12 + ksq*(2.9689380864e11 + ksq*(2.867724288e10 + ksq*(6.810845184e9 + 5.*ksq*(3.520358912e9 + 23.*ksq*(-2.15278208e8 + ksq*(-857888. + ksq*(1.8824763e7 + 13.*ksq*(3.018378e6 + ksq*(5.607375e6 + 544.*ksq*(25115. + 532.*ksq*(-121. + 56.*ksq))))))))))))));
            else if (q == 8) return 7.215307761537049e-15*G.ksq(7)*(3.826815860736e12 + ksq*(-9.208275664896e12 + ksq*(8.31302664192e12 + ksq*(-3.11738499072e12 + ksq*(3.0111105024e11 + ksq*(2.3837958144e10 + ksq*(-2.841407744e9 + 115.*ksq*(1.40652288e8 + ksq*(2.604672e6 + ksq*(-1.5802129e7 + ksq*(-3.4922874e7 + 13.*ksq*(-5.357373e6 + 4.*ksq*(-3.778915e6 + 272.*ksq*(60459. + 76.*ksq*(-753. + 224.*ksq)))))))))))))));
            else if (q == 10) return -3.246888492691672e-14*G.ksq(7)*(-8.50403524608e11 + ksq*(2.630935904256e12 + ksq*(-3.325210656768e12 + ksq*(2.07825666048e12 + ksq*(-6.0222210048e11 + ksq*(4.7675916288e10 + ksq*(3.874594304e9 + ksq*(-8.85299072e8 + 5.*ksq*(4.4930592e7 + ksq*(6.9840029e7 + ksq*(1.21977625e8 + ksq*(2.46081255e8 + 13.*ksq*(6.0546143e7 + 16.*ksq*(-2.4087693e7 + 136.*ksq*(256749. + 608.*ksq*(-253. + 56.*ksq))))))))))))))));
            else if (q == 12) return 1.2987553970766687e-13*G.ksq(7)*(2.12600881152e11 + ksq*(-8.03897081856e11 + ksq*(1.306332758016e12 + ksq*(-1.143041163264e12 + ksq*(5.5203692544e11 + ksq*(-1.31108769792e11 + ksq*(8.751408512e9 + ksq*(6.95592128e8 + ksq*(6.4067696e7 + ksq*(-3.1461815e7 + ksq*(-9.354422e7 + ksq*(-2.16497666e8 + ksq*(-8.00215724e8 + 13.*ksq*(5.29672773e8 + 16.*ksq*(-6.5041815e7 + 544.*ksq*(108215. + 608.*ksq*(-79. + 14.*ksq)))))))))))))))));
        } else if (p == 12){
            if (q == 0) return 3.607653880768524e-15*G.ksq(8)*(5.261871808512e12 + ksq*(1.900120375296e12 + ksq*(1.068817711104e12 + 17.*ksq*(4.048551936e10 + 19.*ksq*(1.47603456e9 + ksq*(-4.1794149376e10 + 23.*ksq*(1.732504704e9 + 65.*ksq*(2.557728e6 + ksq*(1.506423e6 + 17.*ksq*(55443. + 304.*ksq*(111. + 56.*ksq)))))))))));
            else if (q == 2) return -3.607653880768524e-15*G.ksq(8)*(-5.261871808512e12 + ksq*(1.900120375296e12 + ksq*(3.56272570368e11 + ksq*(1.37650765824e11 + 19.*ksq*(3.58465536e9 + ksq*(4.4893821952e10 + 23.*ksq*(-2.042474112e9 + 5.*ksq*(-2.6410656e7 + 13.*ksq*(-622455. + ksq*(245079. + 136.*ksq*(7155. + 1216.*ksq*(11. + 21.*ksq))))))))))));
            else if (q == 4) return 1.0822961642305572e-14*G.ksq(8)*(1.753957269504e12 + ksq*(-1.900120375296e12 + ksq*(3.56272570368e11 + ksq*(4.5883588608e10 + ksq*(1.3621690368e10 + ksq*(-3.7366045696e10 + 23.*ksq*(2.610749568e9 + 5.*ksq*(4.4847904e7 + ksq*(8.142507e6 + 13.*ksq*(-1.343262e6 + ksq*(-3.253161e6 + 544.*ksq*(-10985. + 532.*ksq*(-45. + 56.*ksq)))))))))))));
            else if (q == 6) return -3.607653880768524e-15*G.ksq(8)*(-5.261871808512e12 + ksq*(9.50060187648e12 + ksq*(-5.34408855552e12 + ksq*(6.8825382912e11 + ksq*(6.810845184e10 + ksq*(4.7122568192e10 + 115.*ksq*(-3.64530048e8 + ksq*(2.63568e6 + ksq*(2.4870031e7 + ksq*(4.7870994e7 + 13.*ksq*(6.107379e6 + 8.*ksq*(1.344545e6 + 1088.*ksq*(3045. + 19.*ksq*(-459. + 224.*ksq))))))))))))));
            else if (q == 8) return 3.607653880768524e-15*G.ksq(8)*(5.261871808512e12 + ksq*(-1.3300842627072e13 + ksq*(1.246953996288e13 + ksq*(-4.81777680384e12 + ksq*(4.7675916288e11 + ksq*(2.9188533248e10 + ksq*(2.4382334592e10 + 5.*ksq*(5.2419024e8 + ksq*(-9.8337673e7 + ksq*(-5.08653579e8 + ksq*(-9.88977759e8 + 13.*ksq*(-1.50405073e8 + 16.*ksq*(-2.7673485e7 + 136.*ksq*(994497. + 608.*ksq*(-1633. + 504.*ksq)))))))))))))));
            else if (q == 10) return -3.246888492691672e-14*G.ksq(8)*(-5.84652423168e11 + ksq*(1.900120375296e12 + ksq*(-2.493907992576e12 + ksq*(1.60592560128e12 + ksq*(-4.7675916288e11 + ksq*(3.8880228352e10 + ksq*(1.89706944e9 + ksq*(4.80923744e8 + ksq*(2.23352885e8 + ksq*(2.35711245e8 + ksq*(3.64415611e8 + ksq*(7.34636399e8 + 52.*ksq*(4.7918913e7 + 16.*ksq*(-2.1394485e7 + 544.*ksq*(60145. + 304.*ksq*(-123. + 28.*ksq))))))))))))))));
            else if (q == 12) return 1.3228064229484587e-14*G.ksq(8)*(1.435055947776e12 + ksq*(-5.700361125888e12 + ksq*(9.619359399936e12 + ksq*(-8.671998246912e12 + ksq*(4.29083246592e12 + ksq*(-1.0400744704e12 + ksq*(7.198879296e10 + ksq*(4.198514208e9 + ksq*(5.13841643e8 + ksq*(-1.3820562e8 + ksq*(-5.02881246e8 + ksq*(-1.236211452e9 + ksq*(-4.958009973e9 + 104.*ksq*(4.59951723e8 + 32.*ksq*(-2.9788795e7 + 1088.*ksq*(25719. + 38.*ksq*(-309. + 56.*ksq)))))))))))))))));
        }
        throw errors::BadTaylor();
        return 0;
    }


}; // namespace taylor

#endif
